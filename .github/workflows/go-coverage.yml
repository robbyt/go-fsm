name: Go Coverage

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

env:
  GOCACHE: "/tmp/go-cache"
  GOMODCACHE: "/tmp/go-mod-cache"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
          cache-dependency-path: go.sum

      - name: Display Go version
        run: go version

      - name: Go test
        run: go test -coverprofile=unit.coverage.out -cover github.com/robbyt/go-fsm
      
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: unit.coverage.out
          force-coverage-parser: go

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=robbyt_go-fsm
            -Dsonar.organization=robbyt
            -Dsonar.go.coverage.reportPaths=unit.coverage.out
            -Dsonar.sources=.
            -Dsonar.exclusions=**/*_test.go
            -Dsonar.tests=.
            -Dsonar.test.inclusions=**/*_test.go
            -Dsonar.language=go
            -Dsonar.sourceEncoding=UTF-8